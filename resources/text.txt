	The if-then statement is the most basic of. All the control flow statements. It tells your program to execute. The certain section of code only if a particular test evaluates to true. For example, is dsfds.
	Bicycle class could allow the brakes to decrease the bicycle's speed only if the bicycle is already in motion. One possible implementation of the applyBrakes method could be as follows.
~:void applyBrakes() {
    // the "if" clause: bicycle must be moving 
    if (isMoving){  
        // the "then" clause: decrease current speed 
        currentSpeed--; 
    } 
}:~
	If this test evaluates to false (meaning that the bicycle is not in motion), control jumps to the end of the if-then statement. In addition, the opening and closing braces are optional, provided that the "then" clause contains.
~:void applyBrakes() { 
    // same as above, but without braces  
    if (isMoving) 
        currentSpeed--; 
}:~
	Deciding when to omit the braces is a matter of personal taste. Omitting them can make the code more brittle. If a second statement is later added to the "then" clause, a common mistake would.
	The if-then-else statement provides a secondary path of execution when an "if" clause. Evaluates to false. You could use an if-then-else statement in the applyBrakes method to.
~:void applyBrakes() { 
    if (isMoving) { 
        currentSpeed--; 
    } else { 
        System.err.println("The bicycle has already stopped!"); 
    }  
}:~
	The following program, IfElseDemo, assigns a grade based on the value of a test score: an A for a score of 90% or above, a B for a score of 80% or above, and so on. 	
~:class IfElseDemo { 
    public static void main(String[] args) { 
 
        int testscore = 76; 
        char grade; 
 
        if (testscore >= 90) { 
            grade = 'A'; 
        } else if (testscore >= 80) {   
            grade = 'B'; 
        } else if (testscore >= 70) { 
            grade = 'C'; 
        } else if (testscore >= 60) { 
            grade = 'D'; 
        } else { 
            grade = 'F'; 
        } 
        System.out.println("Grade = " + grade); 
    } 
}:~
	The output from the program is Grade = C. You may have noticed that the value of testscore can satisfy more than one expression in the compound statement: 76 >= 70 and 76 >= 60. However, once a condition is satisfied.
	Appropriate statements are executed (grade = 'C';) and the remaining conditions are not evaluated.